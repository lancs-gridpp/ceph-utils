#!/bin/bash
#
#---------------------------------------------------------------------------------
# Copyright (c) 2024 Lancaster University
# Written by: Gerard Hand
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
#---------------------------------------------------------------------------------
#
# Usage: starttmux <ceph admin node>
#
# Create a tmux session with preconfigured windows.  Each window will ssh to the
# specified admin node:
# 0: admin
# 1: status
# 2: slow ops
# 3: cluster logs
#

if [[ -z "$1" ]]; then
    echo "Specify which ceph admin node to use"
    exit 1
fi

SESSION="ceph-$1"

# Start a new tmux session
tmux new-session -d -s $SESSION -n admin

# Create windows and run commands
tmux new-window -t $SESSION:0 -n admin "ssh $1"
tmux new-window -t $SESSION:1 -n status "ssh $1 -t 'ceph status; exec bash'"
tmux new-window -t $SESSION:2 -n "slow ops" "ssh $1 -t 'ceph -W cluster | tee cluster_$(date +\'%Y-%m-%d_%H-%M-%S\').log | grep -i slow; exec bash'"
tmux new-window -t $SESSION:3 -n cluster "ssh $1 -t 'ceph -W cluster; exec bash'"

# Attach to the session
tmux select-window -t $SESSION:1
tmux attach-session -t $SESSION


